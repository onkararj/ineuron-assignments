# -*- coding: utf-8 -*-
"""Programming Assignment_11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GFCNg0jGxNAucYRodblrBSj6wmvHCrBd

# Python Basic Programming Assignment 11
--------------------

### 1. Write a Python program to find words which are greater than given length k?
"""

def find_long_words(lst, k):
    long_words = []
    for word in lst:
        if len(word) > k:
            long_words.append(word)
    return long_words

# Example usage
my_list = ["apple", "banana", "cherry", "grapefruit", "orange", "pear"]
long_words = find_long_words(my_list, 6)
print(f"The words longer than 6 letters are: {long_words}")

"""### 2. Write a Python program for removing i-th character from a string?"""

def remove_char(s, i):
    # Create a new string by concatenating the parts of the original string before and after the i-th character
    return s[:i] + s[i+1:]

my_string = "Hello, world!"
new_string = remove_char(my_string, 7)
print(f"The new string is: {new_string}")

"""### 3. Write a Python program to split and join a string?"""

# Splitting a string
my_string = "Hello, world!"
split_string = my_string.split(", ")
print(f"The split string is: {split_string}")

# Joining a list of strings into a single string
joined_string = " ".join(split_string)
print(f"The joined string is: {joined_string}")

"""### 4. Write a Python to check if a given string is binary string or not?"""

def is_binary_string(string):
    for char in string:
        if char not in ['0', '1']:
            return False
    return True

# Test the function with sample inputs
test_string1 = '101010'
test_string2 = '101021'
test_string3 = '0101010101010'

print(f"{test_string1} is a binary string: {is_binary_string(test_string1)}")
print(f"{test_string2} is a binary string: {is_binary_string(test_string2)}")
print(f"{test_string3} is a binary string: {is_binary_string(test_string3)}")

"""### 5. Write a Python program to find uncommon words from two Strings?"""

def uncommon_words(str1, str2):
    # Split the strings into words
    words1 = set(str1.split())
    words2 = set(str2.split())
    
    # Find the uncommon words
    uncommon = words1.symmetric_difference(words2)
    
    return uncommon

# Example usage
str1 = "the quick brown fox"
str2 = "the lazy dog jumps over the quick brown fox"
print(uncommon_words(str1, str2))

"""### 6. Write a Python to find all duplicate characters in string?"""

def find_duplicates(s):
    # create an empty set to keep track of duplicates
    duplicates = set()
    # create an empty set to keep track of seen characters
    seen = set()
    for char in s:
        # if character is already in seen set, it is a duplicate
        if char in seen:
            duplicates.add(char)
        else:
            seen.add(char)
    return duplicates

s = "Hello, World!"
duplicates = find_duplicates(s)
print("Duplicate characters:", duplicates)

"""### 7. Write a Python Program to check if a string contains any special character?"""

import re

def contains_special_character(s):
    # define regex pattern to match special characters
    pattern = r'[!@#$%^&*(),.?":{}|<>]'
    # use regex to search for pattern in the string
    if re.search(pattern, s):
        return True
    else:
        return False

s = "Hello, World!"
if contains_special_character(s):
    print("String contains special character(s)")
else:
    print("String does not contain special character(s)")

