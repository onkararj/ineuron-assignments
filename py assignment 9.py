# -*- coding: utf-8 -*-
"""Programming Assignment_9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mpeKQagr-ycccl8it4VMhqKmMoARFPG6

## Programming Assignment_9
----------------

### 1. Write a Python program to check if the given number is a Disarium Number?
"""

num = int(input("Enter a number: "))

# Find the number of digits in the number
num_digits = len(str(num))

# Calculate the sum of the digits to the power of their respective positions
sum = 0
temp = num
while temp > 0:
    digit = temp % 10
    sum += digit ** num_digits
    num_digits -= 1
    temp //= 10

# Check if the number is a Disarium number
if num == sum:
    print(num, "is a Disarium number")
else:
    print(num, "is not a Disarium number")

"""### 2. Write a Python program to print all disarium numbers between 1 to 100?"""

# function to calculate the number of digits in a number
def num_digits(num):
    return len(str(num))

# function to check if a number is a Disarium number
def is_disarium(num):
    n = num_digits(num)
    sum = 0
    temp = num
    while temp > 0:
        digit = temp % 10
        sum += digit ** n
        temp //= 10
        n -= 1
    if num == sum:
        return True
    else:
        return False

# print all the Disarium numbers between 1 to 100
for i in range(1, 101):
    if is_disarium(i):
        print(i)

"""### 3. Write a Python program to check if the given number is Happy Number?"""

#isHappyNumber() will determine whether a number is happy or not    
def isHappyNumber(num):    
    rem = sum = 0;    
        
    #Calculates the sum of squares of digits    
    while(num > 0):    
        rem = num%10;    
        sum = sum + (rem*rem);    
        num = num//10;    
    return sum;    
        
num = 82;    
result = num;    
     
while(result != 1 and result != 4):    
    result = isHappyNumber(result);    
     
#Happy number always ends with 1    
if(result == 1):    
    print(str(num) + " is a happy number");    
#Unhappy number ends in a cycle of repeating numbers which contain 4    
elif(result == 4):    
    print(str(num) + " is not a happy number");

"""### 4. Write a Python program to print all happy numbers between 1 and 100?"""

#isHappyNumber() will determine whether a number is happy or not    
def isHappyNumber(num):    
    rem = sum = 0;    
        
    #Calculates the sum of squares of digits    
    while(num > 0):    
        rem = num%10;    
        sum = sum + (rem*rem);    
        num = num//10;    
    return sum;    
            
#Displays all happy numbers between 1 and 100    
print("List of happy numbers between 1 and 100: ");    
for i in range(1, 101):    
    result = i;    
        
    #Happy number always ends with 1 and     
    #unhappy number ends in a cycle of repeating numbers which contains 4    
    while(result != 1 and result != 4):    
        result = isHappyNumber(result);    
        
    if(result == 1):    
        print(i),    
        print(" "),

"""### 5. Write a Python program to determine whether the given number is a Harshad Number?"""

num = 156;    
rem = sum = 0;    
     
#Make a copy of num and store it in variable n    
n = num;    
     
#Calculates sum of digits    
while(num > 0):    
    rem = num%10;    
    sum = sum + rem;    
    num = num//10;    
     
#Checks whether the number is divisible by the sum of digits    
if(n%sum == 0):    
    print(str(n) + " is a harshad number");    
else:    
    print(str(n) + " is not a harshad number");

"""### 6. Write a Python program to print all pronic numbers between 1 and 100?"""

def is_pronic_number(num):
    # Find the square root of the input number
    root = int(num ** 0.5)

    # Check if num is the product of two consecutive integers
    return root * (root + 1) == num

# Find all pronic numbers between 1 and 100 and print them
for num in range(1, 101):
    if is_pronic_number(num):
        print(num)

