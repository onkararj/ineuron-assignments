# -*- coding: utf-8 -*-
"""Programming Assignment_6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vGZnm_Y2VFK5aUP3tTE28NyA7sYn0xiG

# Programming Basic Assignment 6

### 1. Write a Python Program to Display Fibonacci Sequence Using Recursion?
"""

def fibonacci_recursive(n):
    if n <= 1:
        return n
    else:
        return (fibonacci_recursive(n-1) + fibonacci_recursive(n-2))

# Get the number of terms from the user
nterms = int(input("Enter the number of terms: "))

# Check if the number of terms is valid
if nterms <= 0:
    print("Invalid input! Enter a positive integer.")
else:
    print("Fibonacci sequence using recursion:")
    for i in range(nterms):
        print(fibonacci_recursive(i), end=" ")

"""### 2. Write a Python Program to Find Factorial of Number Using Recursion?"""

def factorial_recursive(n):
    if n == 0:
        return 1
    else:
        return n * factorial_recursive(n-1)

# Get the number from the user
num = int(input("Enter a number: "))

# Check if the number is negative
if num < 0:
    print("Invalid input! Enter a positive integer.")
else:
    # Calculate the factorial using recursion
    fact = factorial_recursive(num)
    print(f"The factorial of {num} is {fact}")

"""### 3. Write a Python Program to calculate your Body Mass Index?"""

# Get input from user
weight = float(input("Enter your weight in kg: "))
height = float(input("Enter your height in meters: "))

# Calculate BMI
bmi = weight / (height ** 2)

# Display the result
print("Your Body Mass Index (BMI) is:", round(bmi, 2))

# Interpret the BMI result
if bmi < 18.5:
    print("You are underweight.")
elif bmi >= 18.5 and bmi <= 24.9:
    print("You are within the healthy weight range.")
elif bmi >= 25 and bmi <= 29.9:
    print("You are overweight.")
else:
    print("You are obese.")

"""### 4. Write a Python Program to calculate the natural logarithm of any number?"""

import math

# Get input from user
number = float(input("Enter a number: "))

# Calculate natural logarithm using log() function
natural_log = math.log(number)

# Display the result
print("The natural logarithm of", number, "is:", natural_log)

"""
### 5. Write a Python Program for cube sum of first n natural numbers?
"""

# Get input from user
n = int(input("Enter a value for n: "))

# Calculate sum of first n natural numbers
sum_n = (n * (n + 1)) // 2

# Calculate cube sum using formula
cube_sum = (sum_n ** 2) * ((sum_n ** 2) - 1) // 4

# Display the result
print("The cube sum of the first", n, "natural numbers is:", cube_sum)

