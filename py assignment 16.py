# -*- coding: utf-8 -*-
"""Programming Assignment_16.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/175ZFoIYIMUK-NucOBTrJ91CZlcBJL2Ge

## Python Basic Programming Assignment 16
---------------------

### 1. Write a function that stutters a word as if someone is struggling to read it. The first two letters are repeated twice with an ellipsis ... and space after each, and then the word is pronounced with a question mark ?. Examples stutter('incredible') ➞ 'in... in... incredible?' stutter('enthusiastic') ➞ 'en... en... enthusiastic?' stutter('outstanding') ➞ 'ou... ou... outstanding?'

### Hint :- Assume all input is in lower case and at least two characters long.
"""

def stutter(word):
    return f"{word[:2]}... {word[:2]}... {word}?"
print(stutter("incredible"))  
print(stutter("enthusiastic"))  
print(stutter("outstanding"))

"""
### 2. Create a function that takes an angle in radians and returns the corresponding angle in degrees rounded to one decimal place."""

import math

def radians_to_degrees(radians):
    degrees = math.degrees(radians)
    return round(degrees, 1)
print(radians_to_degrees(0))  
print(radians_to_degrees(math.pi))  
print(radians_to_degrees(math.pi / 4))

"""
### 3. In this challenge, establish if a given integer num is a Curzon number. If 1 plus 2 elevated to num is exactly divisible by 1 plus 2 multiplied by num, then num is a Curzon number. Given a non-negative integer num, implement a function that returns True if num is a Curzon number, or False otherwise."""

def is_curzon(num):
    numerator = 2**num + 1
    denominator = 2*num + 1
    return numerator % denominator == 0
print(is_curzon(5))  
print(is_curzon(10))  
print(is_curzon(2))

"""
### 4. Given the side length x find the area of a hexagon."""

import math

def area_of_hexagon(x):
    # calculate the area using the formula for a regular hexagon
    area = (3 * math.sqrt(3) * x ** 2) / 2
    return area
    # calculate the area of a hexagon with side length 5
area = area_of_hexagon(5)

# print the result
print(area)

"""
### 5. Create a function that returns a base-2 (binary) representation of a base-10 (decimal) string number. To convert is simple: ((2) means base-2 and (10) means base-10) 010101001(2) = 1 + 8 + 32 + 128."""

def decimal_to_binary(decimal_num):
    binary_num = bin(decimal_num)[2:]  # convert decimal to binary and remove prefix '0b'
    return binary_num
# convert decimal number to binary
binary_num = decimal_to_binary(42)

print(binary_num)

