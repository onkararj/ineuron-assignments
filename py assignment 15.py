# -*- coding: utf-8 -*-
"""Programming Assignment_15.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/188wgJJEuhmsw48u6YsjVw2LOJq7DLY0K

## Python Basic Programming Assignment - 15
-------------------

### 1. Please write a program using generator to print the numbers which can be divisible by 5 and 7 between 0 and n in comma separated form while n is input by console.
"""

def divisible_by_5_and_7(n):
    for i in range(n+1):
        if i % 5 == 0 and i % 7 == 0:
            yield i

n = int(input("Enter a number: "))
result = divisible_by_5_and_7(n)

print("Numbers divisible by 5 and 7 between 0 and", n, ": ", end="")
for num in result:
    print(num, end=", ")

"""
### 2. Please write a program using generator to print the even numbers between 0 and n in comma separated form while n is input by console."""

def even_numbers(n):
    for i in range(n+1):
        if i % 2 == 0:
            yield i

n = int(input("Enter a number: "))
result = ",".join(str(x) for x in even_numbers(n))
print(result)

"""### 3. Please write a program using list comprehension to print the Fibonacci Sequence in comma separated form with a given n input by console."""

n = int(input("Enter a number: "))

fibonacci = [0, 1]
[fibonacci.append(fibonacci[-1] + fibonacci[-2]) for i in range(2, n) if fibonacci[-1] + fibonacci[-2] <= n]

print(fibonacci)

"""
### 4. Assuming that we have some email addresses in the "username@companyname.com" format, please write program to print the user name of a given email address. Both user names and company names are composed of letters only."""

email = input("Enter an email address: ")

username = email.split("@")[0]

print("Username:", username)

"""
### 5. Define a class named Shape and its subclass Square. The Square class has an init function which takes a length as argument. Both classes have a area function which can print the area of the shape where Shape's area is 0 by default."""

class Shape:
    def __init__(self):
        self.area = 0

    def get_area(self):
        print("Area of Shape:", self.area)


class Square(Shape):
    def __init__(self, length):
        super().__init__()
        self.length = length
        self.area = length * length

    def get_area(self):
        print("Area of Square:", self.area)

shape = Shape()
shape.get_area() 

square = Square(5)
square.get_area()

